# -*- coding: utf-8 -*-
"""Kalkulator_Turunan dan Integral.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10cWud_PYJmShjGzYVcpijq3RHKTey_b8
"""

import streamlit as st
from sympy import symbols, diff, integrate, sympify, pretty
from sympy.plotting import plot
import matplotlib.pyplot as plt
import numpy as np
import io

def main():
    st.title("Kalkulator Turunan dan Integral Interaktif untuk Anak SMA")
    st.write("""
    Masukkan fungsi matematika dalam variabel `x`. Contoh: `x**3 + 2*x + 1`, `sin(x)`, `exp(x)`
    Gunakan notasi Python dan fungsi-fungsi SymPy.
    """)

    x = symbols('x')
    fungsi_input = st.text_input("Masukkan fungsi f(x):", value="x**3 + 2*x + 1")
    option = st.radio("Pilih operasi yang diinginkan:", ("Turunan", "Integral Tak Tentu"))

    try:
        fungsi = sympify(fungsi_input)
    except Exception:
        st.error("Input fungsi tidak valid. Silakan periksa kembali penulisan fungsi.")
        return

    if st.button("Hitung"):
        if option == "Turunan":
            turunan = diff(fungsi, x)
            st.markdown("### Hasil Turunan:")
            st.code(pretty(turunan))

            st.markdown("### Plot fungsi dan turunannya")
            # Prepare data for plot
            func_np = lambda val: float(fungsi.evalf(subs={x: val}))
            deriv_np = lambda val: float(turunan.evalf(subs={x: val}))

            x_vals = np.linspace(-10, 10, 400)
            y_func = np.array([func_np(val) for val in x_vals])
            y_deriv = np.array([deriv_np(val) for val in x_vals])

            fig, ax = plt.subplots()
            ax.plot(x_vals, y_func, label='f(x)', color='blue')
            ax.plot(x_vals, y_deriv, label="f'(x)", color='red')
            ax.set_title('Grafik fungsi dan turunannya')
            ax.legend()
            ax.grid(True)

            st.pyplot(fig)

        else:  # Integral
            integral = integrate(fungsi, x)
            st.markdown("### Hasil Integral Tak Tentu:")
            st.code(pretty(integral) + " + C")

            st.markdown("### Plot fungsi dan integralnya")
            func_np = lambda val: float(fungsi.evalf(subs={x: val}))
            integral_np = lambda val: float(integral.evalf(subs={x: val}))

            x_vals = np.linspace(-10, 10, 400)
            y_func = np.array([func_np(val) for val in x_vals])
            y_integral = np.array([integral_np(val) for val in x_vals])

            fig, ax = plt.subplots()
            ax.plot(x_vals, y_func, label='f(x)', color='blue')
            ax.plot(x_vals, y_integral, label='Integral F(x)', color='green')
            ax.set_title('Grafik fungsi dan integralnya')
            ax.legend()
            ax.grid(True)

            st.pyplot(fig)

if __name__ == "__main__":
    main()